<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.eclipse.emf.cdo.dawn" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appinfo>
         <meta.schema plugin="org.eclipse.emf.cdo.dawn" id="org.eclipse.emf.cdo.dawn.editpartstylizers" name="Dawn EditPart Stylizers"/>
      </appinfo>
      <documentation>
         This extension point is used to define custom EditPartStylizers which can define the appearance of the EditPart&apos;s view.
An EditPartStylizer can influence the visual representation of the models state.
Dawn knows three states - default, conflicted and locked. By implementing an own DawnEditPartStylizer you can influence the appearance of the three states for your EditPart and it&apos;s related models. New stylizer can be registered to Dawn using this extension point.
      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <appinfo>
            <meta.element />
         </appinfo>
      </annotation>
      <complexType>
         <sequence minOccurs="1" maxOccurs="unbounded">
            <element ref="DawnEditPartStylizers"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appinfo>
                  <meta.attribute translatable="true"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="DawnEditPartStylizers">
      <annotation>
         <appinfo>
            <meta.element deprecated="true"/>
         </appinfo>
      </annotation>
      <complexType>
         <attribute name="editpart" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appinfo>
                  <meta.attribute kind="java" basedOn=":org.eclipse.gef.EditPart"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="stylizer" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appinfo>
                  <meta.attribute kind="java" basedOn=":org.eclipse.emf.cdo.dawn.appearance.DawnEditPartStylizer"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appinfo>
         <meta.section type="since"/>
      </appinfo>
      <documentation>
         0.2.0
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="examples"/>
      </appinfo>
      <documentation>
         Following is an example of how a EditPartStylizer can be registered:
&lt;pre&gt;
 &lt;DawnEditPartStylizers                   editpart=&quot;org.eclipse.emf.cdo.dawn.examples.acore.classdiagram.diagram.edit.parts.AClassEditPart&quot;
        stylizer=&quot;org.eclipse.emf.cdo.dawn.appearance.impl.DawnBasicNodeEditPartStylizerImpl&quot;&gt;
 &lt;/DawnEditPartStylizers&gt;
&lt;/pre&gt;
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="apiinfo"/>
      </appinfo>
      <documentation>
         To customize the EditPart you must implement the interface org.eclipse.emf.cdo.dawn.appearance.EditPartStylizer. For Graphical EditParts this is typically done by extending the  org.eclipse.emf.cdo.dawn.appearance.impl.DawnBasicGraphicalEditPartStylizer. Set this implementation for the &lt;b&gt;stylizer&lt;/b&gt; attribute. The &lt;b&gt;editpart&lt;b/&gt; attribute takes the EditPart which should be customized.
      </documentation>
   </annotation>


   <annotation>
      <appinfo>
         <meta.section type="copyright"/>
      </appinfo>
      <documentation>
         Copyright (c) 2010-2012 Eike Stepper (Loehne, Germany) and others.&lt;br&gt;
All rights reserved. This program and the accompanying materials are made available under the terms of the Eclipse Public License v1.0 which accompanies this distribution, and is available at &lt;a href=&quot;http://www.eclipse.org/legal/epl-v10.html&quot;&gt;http://www.eclipse.org/legal/epl-v10.html&lt;/a&gt;
      </documentation>
   </annotation>

</schema>
